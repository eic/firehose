on: 
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:
  pull_request:

env:
  TIME: "1d"
  ROOT: "S3/eictest/EPIC/RECO/"
  S3_HOST: https://eics3.sdcc.bnl.gov:9000

jobs:
  campaigns:
    runs-on: ubuntu-latest
    outputs:
      campaigns: ${{steps.campaigns.outputs.campaigns}}
    container:
      image: minio/mc
    steps:
    - name: List campaigns
      id: campaigns
      shell: bash
      run: |
        mc config host add S3 ${S3_HOST} ${S3_ACCESS_KEY} ${S3_SECRET_KEY}
        # FIXME the following lists way too many entries and takes too long
        #campaigns=$(mc find --maxdepth=1 --print='{}' --ignore "*main*" --ignore "*alternative*" ${ROOT} | uniq | sort | uniq)
        # Alternative: we use a regular listing
        campaigns=$(mc ls ${ROOT})
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        echo "campaigns<<END" >> $GITHUB_OUTPUT
        echo "$campaigns" >> $GITHUB_OUTPUT
        echo "END" >> $GITHUB_OUTPUT
      env:
        S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
        S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
    - name: Print outputs
      id: outputs
      run: |
        echo "${{steps.campaigns.outputs.campaigns}}"

  last_campaign:
    runs-on: ubuntu-latest
    needs:
    - campaigns
    if: ${{needs.campaigns.outputs.campaigns != ''}}
    env:
      CAMPAIGNS: ${{needs.campaigns.outputs.campaigns}}
    outputs:
      last_campaign: ${{steps.last_campaign.outputs.last_campaign}}
    steps:
    - name: Print inputs
      id: inputs
      run: |
        echo "$CAMPAIGNS"
    - name: Determine last campaign
      id: last_campaign
      shell: bash
      run: |
        last_campaign=$(echo "$CAMPAIGNS" | grep -v 'alternative' | grep -v 'main' | tail -n 1 | sed 's/.*[ ]\(.*\)$/\1/')
        echo "last_campaign<<END" >> $GITHUB_OUTPUT
        echo "$last_campaign" >> $GITHUB_OUTPUT
        echo "END" >> $GITHUB_OUTPUT
    - name: Print outputs
      id: outputs
      run: |
        echo "${{steps.last_campaign.outputs.last_campaign}}"

  files:
    runs-on: ubuntu-latest
    needs:
    - last_campaign
    if: ${{needs.last_campaign.outputs.last_campaign != ''}}
    env:
      LAST_CAMPAIGN: ${{needs.last_campaign.outputs.last_campaign}}
    container:
      image: minio/mc
    steps:
    - name: Print inputs
      id: inputs
      run: |
        echo "$LAST_CAMPAIGN"
    - name: List new files
      id: files
      shell: bash
      run: |
        mc config host add S3 ${S3_HOST} ${S3_ACCESS_KEY} ${S3_SECRET_KEY}
        mc find --newer-than ${TIME} --print '{}' ${ROOT}${LAST_CAMPAIGN} | tee -a files.txt
      env:
        S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
        S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
    - name: Upload file listing
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: files.txt
        path: files.txt

  counts:
    runs-on: ubuntu-latest
    needs:
    - files
    outputs:
      counts: ${{steps.counts.outputs.counts}}
    steps:
    - name: Download file listing
      id: download
      uses: actions/download-artifact@v4
      with:
        name: files.txt
    - name: Determine file counts
      id: counts
      shell: bash
      run: |
        counts=$(cat files.txt | sed 's|S3/eictest/EPIC/\(.*\)/[^/]*/[^/]*|\1|' | sort | uniq --count)
        echo "counts<<END" >> $GITHUB_OUTPUT
        echo "$counts" >> $GITHUB_OUTPUT
        echo "END" >> $GITHUB_OUTPUT
    - name: Print outputs
      id: outputs
      run: |
        echo "${{steps.counts.outputs.counts}}"

  post:
    runs-on: ubuntu-latest
    needs:
    - counts
    env:
      COUNTS: ${{needs.counts.outputs.counts}}
    steps:
    - name: Print inputs
      id: inputs
      if: ${{ env.COUNTS != '' }}
      run: |
        echo "$COUNTS"
    - name: Create json
      id: json
      if: ${{ env.COUNTS != '' }}
      run: |
        json="{\"text\":\"Over the past ${TIME}, files have been added to S3 (number of files, location):\n\`\`\`\n${COUNTS}\n\`\`\`\n(I'm a bot; modify me at https://github.com/${{github.repository}}.)\"}"
        echo "json<<END" >> $GITHUB_OUTPUT
        echo "$json" >> $GITHUB_OUTPUT
        echo "END" >> $GITHUB_OUTPUT
      env:
        MATTERMOST_HOOK_URL: https://chat.epic-eic.org/hooks
        MATTERMOST_HOOK_SECRET: ${{secrets.MATTERMOST_HOOK_SECRET}}
    - name: Post to Mattermost
      if: ${{ github.event_name != 'pull_request' && env.COUNTS != '' }}
      id: post
      run: |
        if [ -n "$COUNTS" ] ; then
          curl -X POST -H 'Content-type: application/json' --data "${{steps.json.outputs.json}}" ${MATTERMOST_HOOK_URL}/${MATTERMOST_HOOK_SECRET}
        fi
